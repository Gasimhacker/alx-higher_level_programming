===============================
How to use "7-base_geometry.py"
===============================

----------------------------------------------------------------

Importing the class:
	>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

----------------------------------------------------------------

=======================================================
Testing the integer_validator(self, name, value) method
=======================================================

----------------------------------------------------------------

Case 1: Passing positive integers as the value
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("my_int", 12)
	>>> bg.integer_validator("width", 89)

----------------------------------------------------------------

Case 2: Passing a string as the value
	>>> bg.integer_validator("name", "John")
	Traceback (most recent call last):
		...
	TypeError: name must be an integer

----------------------------------------------------------------

Case 3: Passing zero as the value
	>>> bg.integer_validator("age", 0)
	Traceback (most recent call last):
		...
	ValueError: age must be greater than 0

----------------------------------------------------------------

Case 4: Passing a negative value
	>>> bg.integer_validator("distance", -4)
	Traceback (most recent call last):
		...
	ValueError: distance must be greater than 0

----------------------------------------------------------------

Case 5: Passing a boolean value will raise a type error although
	it is a subclass of the integer class:

	>>> bg.integer_validator("bool", True)
	Traceback (most recent call last):
		...
	TypeError: bool must be an integer

----------------------------------------------------------------

case 6: Passing a float as the value
	>>> bg.integer_validator("nb", 3.5)
	Traceback (most recent call last):
		...
	TypeError: nb must be an integer

----------------------------------------------------------------

case 6: Passing a tuple as the value
	>>> bg.integer_validator("tp", (3, 4))
	Traceback (most recent call last):
		...
	TypeError: tp must be an integer

----------------------------------------------------------------

case 7: Passing a list as the value
	>>> bg.integer_validator("ls", [])
	Traceback (most recent call last):
		...
	TypeError: ls must be an integer

----------------------------------------------------------------


=======================================================
Testing the integer_validator(self, name, value) method
=======================================================

----------------------------------------------------------------

Calling the method will raise an exception
	>>> bg.area()
	Traceback (most recent call last):
		...
	Exception: area() is not implemented

----------------------------------------------------------------
